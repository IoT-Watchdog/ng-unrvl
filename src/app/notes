https://angular.io/guide/lazy-loading-ngmodules

ng generate module ut-dashboard --routing
ng generate component ut-dashboard/dashboard

ng generate module ut-settings --routing
ng generate component ut-settings/settings-panel

in ut-dashboard-routing.module.ts die Komponenten
  import { DashboardComponent } from './dashboard/dashboard.component'
in die Routen hinzufügen
  {
    path: '',
    component: SettingsPanelComponent
  }

wenn man die komponente gleich benennt wie das modul und nach dem modul erzeugt, fügt ers gleich in die module.ts ein. in die routing.ts muss ma trotzdem eintragen!

Note on Interfaces
  this.utFetchdataService.getHTTPData().subscribe( (data: singleValue) => ...

wenn das singleValue net definiert ist, kompilierts mit ng serve beim 1.Mal nicht, beim 2. schon - was das Bugfixen unglaublich "einfach" macht...



how to add an app:
ng g m ut-apps/co2-graph --routing
ng g c ut-apps/co2-graph
  edit -routing.module.ts, add
    import { Co2GraphComponent } from './co2-graph.component';


DyGraphs:

laut https://www.npmjs.com/package/ng-dygraphs

npm install ng-dygraphs --save

~/uni/unraveltec/Frontend/Web # 

note:the dygraphs module must be injected in the submodule where it is used.

# deployment 

cd /Frontend/Web; npm run build.prod

cd dist/Web
rsync -rax * root@henri0.lan:~/Frontend/
git checkout --orphan
git rm --cached -r .
rm -rf *
